#!/usr/bin/expect

package require lcdproclib

spawn tail --retry --follow=name /run/snakecontrol/monitor.log/current
set logsid ${spawn_id}

spawn tail --retry --follow=name /run/snakecontrol/door-monitor.log/current
set doorlogsid ${spawn_id}

set sid [::lcdproclib::spawnlcd "localhost" "13666"]
::lcdproclib::cmd ${sid} "client_set -name viv"

::lcdproclib::cmd ${sid} "screen_add 1"
::lcdproclib::cmd ${sid} "screen_set 1 -name Vivarium"
::lcdproclib::cmd ${sid} "screen_set 1 -priority hidden"
::lcdproclib::cmd ${sid} "screen_set 1 -cursor off"

::lcdproclib::cmd ${sid} "widget_add 1 ti title"
::lcdproclib::cmd ${sid} "widget_set 1 ti Vivarium"

::lcdproclib::cmd ${sid} "widget_add 1 i_up string"
::lcdproclib::cmd ${sid} "widget_set 1 i_up 1 3 M"
::lcdproclib::cmd ${sid} "widget_add 1 i_mt string"
::lcdproclib::cmd ${sid} "widget_set 1 i_mt 2 3 T"
::lcdproclib::cmd ${sid} "widget_add 1 v_mt string"
::lcdproclib::cmd ${sid} "widget_add 1 i_mh string"
::lcdproclib::cmd ${sid} "widget_set 1 i_mh 8 3 H"
::lcdproclib::cmd ${sid} "widget_add 1 v_mh string"

::lcdproclib::cmd ${sid} "widget_add 1 i_l icon"
::lcdproclib::cmd ${sid} "widget_set 1 i_l 1 2 ARROW_LEFT"

::lcdproclib::cmd ${sid} "widget_add 1 i_r icon"
::lcdproclib::cmd ${sid} "widget_set 1 i_r 1 4 ARROW_RIGHT"

::lcdproclib::cmd ${sid} "widget_add 1 i_lh icon"
::lcdproclib::cmd ${sid} "widget_set 1 i_lh 2 2 ARROW_DOWN"
::lcdproclib::cmd ${sid} "widget_add 1 v_lh string"

::lcdproclib::cmd ${sid} "widget_add 1 i_rh icon"
::lcdproclib::cmd ${sid} "widget_set 1 i_rh 2 4 ARROW_DOWN"
::lcdproclib::cmd ${sid} "widget_add 1 v_rh string"

::lcdproclib::cmd ${sid} "widget_add 1 i_lt icon"
::lcdproclib::cmd ${sid} "widget_set 1 i_lt 8 2 ARROW_UP"
::lcdproclib::cmd ${sid} "widget_add 1 v_lt string"

::lcdproclib::cmd ${sid} "widget_add 1 i_rt icon"
::lcdproclib::cmd ${sid} "widget_set 1 i_rt 8 4 ARROW_UP"
::lcdproclib::cmd ${sid} "widget_add 1 v_rt string"

# Can't use vbars and icons at the same time.  Dammit!
::lcdproclib::cmd ${sid} "widget_add 1 v_dmxl string"
::lcdproclib::cmd ${sid} "widget_set 1 v_dmxl 14 3 @"
::lcdproclib::cmd ${sid} "widget_add 1 v_ldmx string"
::lcdproclib::cmd ${sid} "widget_add 1 v_hdmx string"
::lcdproclib::cmd ${sid} "widget_add 1 v_mdmx string"

::lcdproclib::cmd ${sid} "widget_add 1 v_doorl icon"
::lcdproclib::cmd ${sid} "widget_set 1 v_doorl 19 3 CHECKBOX_OFF"
::lcdproclib::cmd ${sid} "widget_add 1 v_door string"
::lcdproclib::cmd ${sid} "widget_set 1 v_door 20 3 ?"

::lcdproclib::cmd ${sid} "widget_add 1 v_tickl string"
# ::lcdproclib::cmd ${sid} "widget_add 1 v_tickt string"

::lcdproclib::cmd ${sid} "screen_set 1 -priority info"

set loopctr 0

proc drawtemp { sid scr wid x y v } {
  set t [expr round(${v}*10.0)/10.0]
  ::lcdproclib::cmd ${sid} "widget_set ${scr} ${wid} ${x} ${y} ${t}"
}

# Render DMX as "A" (0-9) through "Z" (250-255)
proc drawdmx { sid scr wid x y d } {
  set t [ format %c [ expr 65 + ${d} / 10 ] ]
  ::lcdproclib::cmd ${sid} "widget_set ${scr} ${wid} ${x} ${y} {${t}}"
}

set datapfx "^\[^ \]* DATA: "
set datare "(\[^ \r\n\]*)"
set dskip "\[^\n\]*"

while { true } {
  expect {
    -i ${logsid} -re "${datapfx}(${dskip})\n" {
      # This uses the many-argument form of switch to get expansion inside the
      # templates.  That's a little gross, but so it goes.
      switch -regexp -matchvar m -- "${expect_out(1,string)}" \
        "hide-near temp=${datare}"   { drawtemp ${sid} 1 "v_lh"    3 2 [lindex ${m} 1] } \
        "hide-far temp=${datare}"    { drawtemp ${sid} 1 "v_rh"    3 4 [lindex ${m} 1] } \
        "tank-near temp=${datare}"   { drawtemp ${sid} 1 "v_lt"    9 2 [lindex ${m} 1] } \
        "tank-far temp=${datare}"    { drawtemp ${sid} 1 "v_rt"    9 4 [lindex ${m} 1] } \
        "tank-mid temp=${datare}"    { drawtemp ${sid} 1 "v_mt"    3 3 [lindex ${m} 1] } \
        "tank-mid humid=${datare}"   { drawtemp ${sid} 1 "v_mh"    9 3 [lindex ${m} 1] } \
        "dmx-tanknear dmx=${datare}" { drawdmx  ${sid} 1 "v_ldmx" 15 3 [lindex ${m} 1] } \
        "dmx-hidenear dmx=${datare}" { drawdmx  ${sid} 1 "v_hdmx" 16 3 [lindex ${m} 1] } \
    }
    -i ${logsid} -re "\[^ :\]*:..:..\.\[^ \]* check temps fini${dskip}\n" {
      ::lcdproclib::cmd ${sid} "widget_set 1 v_tickl 20 2 ${loopctr}"
      set loopctr [expr (${loopctr} + 1) % 10]
    }
    -i ${logsid} -re "${dskip}\n" {}

    -i ${doorlogsid} -re "${datapfx}door${dskip} left=${datare} right=${datare}${dskip}\n" {
      switch -regexp "${expect_out(1,string)}${expect_out(2,string)}" {
        "00" {
            ::lcdproclib::cmd ${sid} "widget_set 1 v_doorl 19 3 CHECKBOX_ON"
            ::lcdproclib::cmd ${sid} "widget_set 1 v_door  20 3 { }"
        }
        "0." {
            ::lcdproclib::cmd ${sid} "widget_set 1 v_doorl 19 3 CHECKBOX_OFF"
            ::lcdproclib::cmd ${sid} "widget_set 1 v_door  20 3 R"
        }
        ".0" {
            ::lcdproclib::cmd ${sid} "widget_set 1 v_doorl 19 3 CHECKBOX_OFF"
            ::lcdproclib::cmd ${sid} "widget_set 1 v_door  20 3 L"
        }
        default {
            ::lcdproclib::cmd ${sid} "widget_set 1 v_doorl 19 3 CHECKBOX_OFF"
            ::lcdproclib::cmd ${sid} "widget_set 1 v_door  20 3 B"
        }
      }
    }
    -i ${doorlogsid} -re "${dskip}\n" {}

    # -i ${sid} -re "^listen ${dskip}\n" {}
    # -i ${sid} -re "^ignore ${dskip}\n" {}
    -i ${sid} -re "${dskip}\n" {}
  }
}
